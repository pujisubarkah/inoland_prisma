generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model beritas {
  id         Int       @id @default(autoincrement())
  created_at DateTime? @db.Timestamp(6)
  likes      Int?
  title      String?
  date       DateTime? @db.Timestamp(6)
  image_url  String?
  deskripsi  String?
  embed_url  String?
}

model diskusi {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamp(6)
  title      String?
  content    String?
  asked_by   String?
  category   String?
  likes      BigInt?
  answer     BigInt?
  views      BigInt?
}

model dokumens {
  id            Int       @id @default(autoincrement())
  created_at    DateTime? @db.Timestamp(6)
  nama          String?
  link          String?
  jenis_dokumen String?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model indeks_inovasi {
  id              Int              @id @default(autoincrement())
  created_at      DateTime         @default(now()) @db.Timestamptz(6)
  id_provinsi     Int?
  id_kabkot       Int?
  indeks_tahun    Int?
  indeks_skor     Float?           @db.Real
  indeks_predikat String?
  nama_kabkot     String?
  nama_prov       String?
  level           String?
  indeks_level    String?
  ipp_skor        Float?
  ipp_level       String?
  ipp_predikat    String?
  idsd_skor       Float?
  idsd_level      String?
  idsd_predikat   String?
  rb_predikat     String?
  rb_level        String?
  master_provinsi master_provinsi? @relation(fields: [id_provinsi], references: [id_provinsi], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model inolands {
  id                       Int               @id @default(autoincrement())
  created_at               DateTime          @default(now()) @db.Timestamptz(6)
  judul_inovasi            String?
  kld                      String?
  urusan                   String?
  deskripsi                String?
  tahun                    String?
  id_provinsi              Int?
  id_kabkot                Int?
  inovator                 String?
  sdgs                     Int?
  master_kabupaten         master_kabupaten? @relation(fields: [id_kabkot], references: [id_kabkot], onDelete: NoAction, onUpdate: NoAction)
  master_provinsi          master_provinsi?  @relation(fields: [id_provinsi], references: [id_provinsi], onDelete: NoAction, onUpdate: NoAction)
  sdgs_inolands_sdgsTosdgs sdgs?             @relation("inolands_sdgsTosdgs", fields: [sdgs], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inovasi_LAN {
  id             Int      @id @default(autoincrement())
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  nama_inovasi   String?
  produk_inovasi String?
  nama_instansi  String?
  deskripsi      String?
  image_link     String?
}

model inovasis {
  id                  Int               @id @default(autoincrement())
  created_at          String
  document_id         String?
  nama_inovasi        String?
  penggagas           String?
  deskripsi           String?
  nama_instansi       String?
  unit_instansi       String?
  tahun_inisiasi      String?
  tahun_implementasi  String?
  faktor_pendorong    String?
  faktor_penghambat   String?
  tahapan_proses      String?
  output              String?
  outcome             String?
  manfaat             String?
  prasyarat_replikasi String?
  kontak              String?
  sumber              String?
  id_provinsi         Int?
  id_kabkot           Int?
  published_at        String?
  updated_at          String?
  created_by_id       String?
  updated_by_id       String?
  locale              String?
  master_kabupaten    master_kabupaten? @relation(fields: [id_kabkot], references: [id_kabkot], onDelete: NoAction, onUpdate: NoAction)
  master_provinsi     master_provinsi?  @relation(fields: [id_provinsi], references: [id_provinsi], onDelete: NoAction, onUpdate: NoAction)
}

model kabupatens {
  created_at       DateTime          @default(now()) @db.Timestamptz(6)
  nama             String?           @db.VarChar(255)
  svg_path         String?
  id_provinsi      Int?
  id_kabkot        Int?
  updated_at       DateTime?         @db.Timestamp(6)
  id               Int               @id @default(autoincrement())
  master_kabupaten master_kabupaten? @relation(fields: [id_kabkot], references: [id_kabkot], onDelete: NoAction, onUpdate: NoAction)
  master_provinsi  master_provinsi?  @relation(fields: [id_provinsi], references: [id_provinsi], onDelete: NoAction, onUpdate: NoAction)
}

model master_kabupaten {
  id              Int              @id @default(autoincrement())
  created_at      DateTime         @default(now()) @db.Timestamptz(6)
  id_provinsi     Int?
  id_kabkot       Int?             @unique
  nama_kabkot     String?
  inolands        inolands[]
  inovasis        inovasis[]
  kabupatens      kabupatens[]
  master_provinsi master_provinsi? @relation(fields: [id_provinsi], references: [id_provinsi], onDelete: NoAction, onUpdate: NoAction)
}

model master_provinsi {
  id               Int                @id @default(autoincrement())
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  id_provinsi      Int?               @unique
  nama_provinsi    String?            @db.VarChar
  indeks_inovasi   indeks_inovasi[]
  inolands         inolands[]
  inovasis         inovasis[]
  kabupatens       kabupatens[]
  master_kabupaten master_kabupaten[]
  provinsis        provinsis[]
}

model pdflist {
  id            Int      @id @default(autoincrement())
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  pdf_url       String?
  pdf_judul     String?
  pdf_kategori  String?
  pdf_cover     String?
  pdf_publisher String?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model posts {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  title       String?
  description String?
  tags        Json?     @db.Json
  author_id   String?   @db.Uuid
  upvotes     Json?     @db.Json
  views       BigInt?
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  status      String?   @default("") @db.VarChar
}

model provinsis {
  id              Int              @id @unique
  nama            String?          @db.VarChar(255)
  svg_path        String?
  id_provinsi     Int?
  created_at      DateTime?        @db.Timestamp(6)
  updated_at      DateTime?        @db.Timestamp(6)
  published_at    DateTime?        @db.Timestamp(6)
  created_by_id   Int?
  updated_by_id   Int?
  locale          String?          @db.VarChar(255)
  Tahun_2019      String?
  Tahun_2020      String?
  Tahun_2021      String?
  Tahun_2022      String?
  Tahun_2023      String?
  master_provinsi master_provinsi? @relation(fields: [id_provinsi], references: [id_provinsi], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model reset_password {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  expiresAt DateTime
  user      user     @relation(fields: [userId], references: [id])
}

model role {
  id         Int       @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamp(6)
  role_name  String?   @db.VarChar
  user       user[]
}

model sdgs {
  id                           Int        @id @default(autoincrement())
  created_at                   DateTime   @default(now()) @db.Timestamptz(6)
  tujuan_ke                    Int?       @db.SmallInt
  sdgs                         String?
  image                        String?
  inolands_inolands_sdgsTosdgs inolands[] @relation("inolands_sdgsTosdgs")
}

model user {
  nama_lengkap         String?
  email                String               @unique(map: "user_id_email_key") @db.VarChar
  instansi             String?              @db.VarChar
  role_id              Int?
  password             String?              @db.VarChar(255)
  is_verified          Boolean?
  verification_token   String?              @db.VarChar(255)
  created_at           DateTime?            @default(now()) @db.Timestamp(6)
  id                   Int                  @id @default(autoincrement())
  username             String?              @unique
  reset_password       reset_password[]
  role                 role?                @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_role_id_fkey")
  verification_tokens  verification_token[]
}

model verification_token {
  token     String   @unique
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
  id        Int      @id @default(autoincrement())
  user      user     @relation(fields: [userId], references: [id])
}
